// Generated by CoffeeScript 1.6.3
(function() {
  Backbone.d3 = d3;

}).call(this);

// Generated by CoffeeScript 1.6.3
(function() {
  var D3Model, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  D3Model = (function(_super) {
    __extends(D3Model, _super);

    function D3Model() {
      _ref = D3Model.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return D3Model;

  })(Backbone.Model);

}).call(this);

// Generated by CoffeeScript 1.6.3
(function() {
  var D3Collection, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  D3Collection = (function(_super) {
    __extends(D3Collection, _super);

    function D3Collection() {
      _ref = D3Collection.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return D3Collection;

  })(Backbone.Collection);

}).call(this);

// Generated by CoffeeScript 1.6.3
(function() {
  var D3View, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  D3View = (function(_super) {
    __extends(D3View, _super);

    function D3View() {
      _ref = D3View.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    D3View.prototype._ensureElement = function() {
      var $el, attrs, d3el;
      if (!this.el) {
        attrs = _.extend({}, _.result(this, 'attributes'));
        if (this.id) {
          attrs.id = _.result(this, 'id');
        }
        if (this.className) {
          attrs['class'] = _.result(this, 'className');
        }
        $el = Backbone.$("<" + (_.resut(this, 'tagname')) + ">").attr(attrs);
        this.setElement($el, false);
        d3el = Backbone.d3.select("<" + (_.result(this, 'tagName')) + ">").attr(attrs);
        return this.setElement(d3el, false);
      } else {
        return this.setElement(_.result(this, 'el'), false);
      }
    };

    return D3View;

  })(Backbone.View);

}).call(this);
